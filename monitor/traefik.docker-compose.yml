version: "3"

networks:
  public:
    external:
      name: ${TRAEFIK_PUBLIC_NETWORK}

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.26.0
    container_name: docker_metrics
    volumes:
      - /opt/monitor/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    expose:
      - 9090
    networks:
      - public
    restart: unless-stopped

  nodeexporter:
    image: prom/node-exporter:v1.1.2
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    networks:
      - public
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    expose:
      - 8080
    networks:
      - public
    restart: unless-stopped

  grafana:
    image: grafana/grafana:7.5.2
    container_name: docker_metrics_graphs
    volumes:
      - grafana_data:/var/lib/grafana
      - /opt/monitor/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - /opt/monitor/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - public
    labels:
      - "traefik.enable=true"

      # grafana
      - "traefik.http.routers.monitor_grafana.service=monitor_grafana"
      - "traefik.http.routers.monitor_grafana.rule=Host(`${TRAEFIK_PROXY_URL}`)"
      - "traefik.http.routers.monitor_grafana.entrypoints=websecure"
      - "traefik.http.routers.monitor_grafana.tls.certresolver=tlsresolver"
      - "traefik.http.services.monitor_grafana.loadbalancer.server.port=3000"
    restart: unless-stopped
