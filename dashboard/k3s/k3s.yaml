# Persistent Volume Claims
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: service-dashboard
  annotations:
    nfs.io/storage-path: service-dashboard
spec:
  storageClassName: managed-nfs-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: ${VOLUME_SIZE}

# Services
---
apiVersion: v1
kind: Service
metadata:
  name: service-dashboard
spec:
  selector:
    app: service-dashboard
  ports:
    - protocol: TCP
      name: frontend
      port: 8080

# Deployments
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: service-dashboard
  labels:
    app: service-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-dashboard
  template:
    metadata:
      labels:
        app: service-dashboard
    spec:
      containers:
        - name: homer
          image: b4bz/homer:latest
          ports:
            - name: frontend
              containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /www/assets/config.yml
              subPath: config.yml
            - name: data
              mountPath: /www/assets
              subPath: ./assets
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: service-dashboard

# Routes
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: service-dashboard
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`${TRAEFIK_PROXY_URL}`)"
      kind: Rule
      services:
        - name: resume
          namespace: default
          port: 8080
  tls:
    certResolver: tlsresolver
