version: "3"

services:
  ## NETWORKING

  # reverse proxy
  traefik:
    container_name: traefik
    image: traefik:2.7
    ports:
      # proxy entrypoints
      - 80:80/tcp # web
      - 443:443/tcp # websecure
      - 8082:8082/tcp # metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/traefik/providers:/config
      - ${CONFIG_DIR}/traefik/certs:/etc/certs
      - ${CONFIG_DIR}/traefik/letsencrypt:/letsencrypt
    command:
      - "--entrypoints.web.address=:80/tcp"
      - "--entrypoints.websecure.address=:443/tcp"
      - "--providers.docker"
      - "--providers.docker.defaultRule=Host(`{{ trimPrefix `/` .Name }}.docker.localhost`)"
      - "--api.insecure=true"
      - "--log=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--serverstransport.insecureskipverify=true"
      - "--certificatesresolvers.tlsresolver.acme.tlschallenge"
      - "--certificatesresolvers.tlsresolver.acme.email=${TRAEFIK_TLS_EMAIL}"
      - "--certificatesresolvers.tlsresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_URL}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=tlsresolver
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=authelia@docker
      - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=2000000 # raise max body size to 2MB
    depends_on:
      - authelia
    restart: unless-stopped

  # vpn client
  service-vpn:
    container_name: service-vpn
    image: qmcgaw/gluetun:v3.38
    cap_add:
      - NET_ADMIN
    ports:
      - 8743:8000
      # service entrypoints
      - 9696:9696 # prowlarr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8686:8686 # lidarr
      - 8787:8787 # readarr
      - 8788:8788 # readarr-audiobooks
      - 9091:9091 # transmission
      - 51413:51413 # transmission
      - 51413:51413/udp # transmission
      - 6767:6767 # bazarr
      - 8090:8090 # mylar3
      - 8091:8091 # mylar3-manga
      - 5055:5055 # jellyseerr
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - SERVER_COUNTRIES=United States
    restart: unless-stopped

  # vpn tunnel client
  wireguard:
    image: place1/wg-access-server
    container_name: wireguard
    cap_add:
      - NET_ADMIN
    volumes:
      - ${CONFIG_DIR}/wireguard/data:/data
      - ${CONFIG_DIR}/wireguard/config.yaml:/config.yaml
    environment:
      - WG_ADMIN_USERNAME=admin
      - WG_ADMIN_PASSWORD=${WIREGUARD_ADMIN_PASSWORD}
      - WG_WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WG_STORAGE=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:5432/wireguard?sslmode=disable
      - WG_DNS_UPSTREAM=8.8.8.8
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.rule=Host(`${WIREGUARD_URL}`)"
      - "traefik.http.routers.wireguard.entrypoints=websecure"
      - "traefik.http.routers.wireguard.tls.certresolver=tlsresolver"
      - "traefik.http.routers.wireguard.middlewares=authelia@docker"
      - "traefik.http.services.wireguard.loadbalancer.server.port=8000"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "51820:51820/udp"
    devices:
      - "/dev/net/tun:/dev/net/tun"
    restart: unless-stopped

  # dns and network adblock
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - 18080:8080
    dns:
      - 127.0.0.1
      - 9.9.9.9
    environment:
      TZ: ${TIMEZONE}
      WEBPASSWORD: "${PIHOLE_PASSWORD}"
      WEB_PORT: 8080
      VIRTUAL_HOST: "${PIHOLE_URL}"
      PIHOLE_DNS_: 9.9.9.9;149.112.112.112;1.1.1.1
      DNSSEC: "true"
      FTLCONF_REPLY_ADDR4: ${HOST_IP}
      DNSMASQ_LISTENING: all
      WEBTHEME: default-dark
      PIHOLE_DOMAIN: public
    volumes:
      - ${CONFIG_DIR}/pihole/etc:/etc/pihole
      - ${CONFIG_DIR}/pihole/dnsmasq.d:/etc/dnsmasq.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`${PIHOLE_URL}`)"
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - "traefik.http.routers.pihole.tls.certresolver=tlsresolver"
      - "traefik.http.routers.pihole.middlewares=authelia@docker"
      - "traefik.http.services.pihole.loadbalancer.server.port=8080"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  ## DATABASE

  # database
  postgres:
    container_name: postgres_db
    image: postgres:13.5
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${CONFIG_DIR}/postgres/db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped

  # AUTHENTICATION

  # ldap server
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    hostname: openldap
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: ${LDAP_ORGANIZATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}.${LDAP_TLD}
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_CONFIG_PASSWORD: ${LDAP_CONFIG_PASSWORD}
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "false"
      LDAP_TLS_VERIFY_CLIENT: "never"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    volumes:
      - ${CONFIG_DIR}/openldap/var_lib_ldap:/var/lib/ldap
      - ${CONFIG_DIR}/openldap/etc_ldap_slapd.d:/etc/ldap/slapd.d
    ports:
      - "389:389"
      - "636:636"
    restart: unless-stopped

  # ldap web ui
  openldap-ui:
    image: osixia/phpldapadmin:latest
    container_name: openldap-ui
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    volumes:
      - ${CONFIG_DIR}/openldap/ui:/var/www/phpldapadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openldap.rule=Host(`${LDAP_UI_URL}`)"
      - "traefik.http.routers.openldap.entrypoints=websecure"
      - "traefik.http.routers.openldap.tls.certresolver=tlsresolver"
      - "traefik.http.routers.openldap.middlewares=authelia@docker"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - openldap
    restart: unless-stopped

  # SSO provider
  authelia:
    image: authelia/authelia
    container_name: authelia
    hostname: authelia
    volumes:
      - ${CONFIG_DIR}/authelia:/config
    ports:
      - 9092:9092 # web
      - 9959:9959 # metrics
    expose:
      - 9092
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`${AUTHELIA_URL}`)"
      - "traefik.http.routers.authelia.entrypoints=websecure"
      - "traefik.http.routers.authelia.tls.certresolver=tlsresolver"
      - "traefik.http.services.authelia.loadbalancer.server.port=9092"
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9092/api/verify?rd=https://${AUTHELIA_URL}"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardauth.tls.insecureSkipVerify=true"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - openldap
    restart: unless-stopped

  authelia-redis:
    image: redis:alpine
    container_name: authelia-redis
    volumes:
      - ${CONFIG_DIR}/authelia/redis:/data
    expose:
      - 6379
    environment:
      - TZ=${TIMEZONE}
    restart: unless-stopped

  ## MEDIA MANAGEMENT

  #indexer management
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/prowlarr:/config
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.prowlarr.rule=Host(`${PROWLARR_URL}`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.prowlarr.middlewares=authelia@docker"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

  # tv show management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_URL}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.sonarr.middlewares=authelia@docker"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # movie management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_URL}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.radarr.middlewares=authelia@docker"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # music management
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/lidarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.lidarr.rule=Host(`${LIDARR_URL}`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.lidarr.middlewares=authelia@docker"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # book management
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/readarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.readarr.rule=Host(`${READARR_URL}`)"
      - "traefik.http.routers.readarr.entrypoints=websecure"
      - "traefik.http.routers.readarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.readarr.middlewares=authelia@docker"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # audiobook management
  readarr-audiobooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-audiobooks
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/readarr-audiobooks:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.readarr-audiobooks.rule=Host(`${READARR_AUDIOBOOKS_URL}`)"
      - "traefik.http.routers.readarr-audiobooks.entrypoints=websecure"
      - "traefik.http.routers.readarr-audiobooks.tls.certresolver=tlsresolver"
      - "traefik.http.routers.readarr-audiobooks.middlewares=authelia@docker"
      - "traefik.http.services.readarr-audiobooks.loadbalancer.server.port=8788"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # comic management
  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:mylar3
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/mylar3:/config
      - ${MEDIA_DIR}/comics:/comics
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.mylar3.rule=Host(`${MYLAR3_URL}`)"
      - "traefik.http.routers.mylar3.entrypoints=websecure"
      - "traefik.http.routers.mylar3.tls.certresolver=tlsresolver"
      - "traefik.http.routers.mylar3.middlewares=authelia@docker"
      - "traefik.http.services.mylar3.loadbalancer.server.port=8090"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

    # manga management
  mylar3-manga:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3-manga
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:mylar3
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/mylar3-manga:/config
      - ${MEDIA_DIR}/manga:/comics
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.mylar3-manga.rule=Host(`${MYLAR3_MANGA_URL}`)"
      - "traefik.http.routers.mylar3-manga.entrypoints=websecure"
      - "traefik.http.routers.mylar3-manga.tls.certresolver=tlsresolver"
      - "traefik.http.routers.mylar3-manga.middlewares=authelia@docker"
      - "traefik.http.services.mylar3-manga.loadbalancer.server.port=8091"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

  # subtitle management
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/bazarr:/config
      - ${MEDIA_DIR}:/data
    network_mode: service:service-vpn
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${BAZARR_URL}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.bazarr.middlewares=authelia@docker"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
    restart: unless-stopped

  # media request interface
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/jellyseerr:/app/config
    network_mode: service:service-vpn
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`${JELLYSEERR_URL}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.jellyseerr.middlewares=authelia@docker"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
    restart: unless-stopped

  ## GENERAL CLIENTS

  # download client
  transmission:
    image: lscr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      # - TRANSMISSION_WEB_HOME=/flood-for-transmission/
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ${CONFIG_DIR}/transmission:/config
      - ${DOWNLOADS_DIR}:/downloads
    labels:
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_URL}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=tlsresolver"
      - "traefik.http.routers.transmission.middlewares=authelia@docker"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: service:service-vpn
    depends_on:
      - service-vpn
    restart: unless-stopped

  # mqtt client
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - 1883:1883
      - 8883:8883
    volumes:
      - ${CONFIG_DIR}/mosquitto/data:/mosquitto/data
      - ${CONFIG_DIR}/mosquitto/log:/mosquitto/log
      - ${CONFIG_DIR}/mosquitto/config:/mosquitto/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
