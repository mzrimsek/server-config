version: "3"

services:
  ## NETWORKING

  # reverse proxy
  traefik:
    container_name: traefik
    image: traefik:2.7
    ports:
      # proxy entrypoints
      - 80:80/tcp # web
      - 443:443/tcp # websecure
      - 8082:8082/tcp # metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/traefik/providers:/config
      - ${CONFIG_DIR}/traefik/certs:/etc/certs
      - ${CONFIG_DIR}/traefik/letsencrypt:/letsencrypt
    command:
      - "--entrypoints.web.address=:80/tcp"
      - "--entrypoints.websecure.address=:443/tcp"
      - "--providers.docker"
      - "--providers.docker.defaultRule=Host(`{{ trimPrefix `/` .Name }}.docker.localhost`)"
      - "--api.insecure=true"
      - "--log=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--serverstransport.insecureskipverify=true"
      - "--certificatesresolvers.tlsresolver.acme.tlschallenge"
      - "--certificatesresolvers.tlsresolver.acme.email=${TRAEFIK_TLS_EMAIL}"
      - "--certificatesresolvers.tlsresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_URL}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=tlsresolver
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=authelia@docker
      - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=2000000 # raise max body size to 2MB
    depends_on:
      - authelia
    restart: unless-stopped

  # vpn tunnel client
  wireguard:
    image: place1/wg-access-server
    container_name: wireguard
    cap_add:
      - NET_ADMIN
    volumes:
      - ${CONFIG_DIR}/wireguard/data:/data
      - ${CONFIG_DIR}/wireguard/config.yaml:/config.yaml
    environment:
      - WG_ADMIN_USERNAME=admin
      - WG_ADMIN_PASSWORD=${WIREGUARD_ADMIN_PASSWORD}
      - WG_WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WG_STORAGE=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:5432/wireguard?sslmode=disable
      - WG_DNS_UPSTREAM=8.8.8.8
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.rule=Host(`${WIREGUARD_URL}`)"
      - "traefik.http.routers.wireguard.entrypoints=websecure"
      - "traefik.http.routers.wireguard.tls.certresolver=tlsresolver"
      - "traefik.http.routers.wireguard.middlewares=authelia@docker"
      - "traefik.http.services.wireguard.loadbalancer.server.port=8000"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "51820:51820/udp"
    devices:
      - "/dev/net/tun:/dev/net/tun"
    restart: unless-stopped

  ## DATABASE

  # database
  postgres:
    container_name: postgres_db
    image: postgres:16
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${CONFIG_DIR}/postgres16/db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped

  # AUTHENTICATION

  # ldap server
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    hostname: openldap
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: ${LDAP_ORGANIZATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}.${LDAP_TLD}
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_CONFIG_PASSWORD: ${LDAP_CONFIG_PASSWORD}
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "false"
      LDAP_TLS_VERIFY_CLIENT: "never"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    volumes:
      - ${CONFIG_DIR}/openldap/var_lib_ldap:/var/lib/ldap
      - ${CONFIG_DIR}/openldap/etc_ldap_slapd.d:/etc/ldap/slapd.d
    ports:
      - "389:389"
      - "636:636"
    restart: unless-stopped

  # ldap web ui
  openldap-ui:
    image: osixia/phpldapadmin:latest
    container_name: openldap-ui
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    volumes:
      - ${CONFIG_DIR}/openldap/ui:/var/www/phpldapadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openldap.rule=Host(`${LDAP_UI_URL}`)"
      - "traefik.http.routers.openldap.entrypoints=websecure"
      - "traefik.http.routers.openldap.tls.certresolver=tlsresolver"
      - "traefik.http.routers.openldap.middlewares=authelia@docker"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - openldap
    restart: unless-stopped

  # SSO provider
  authelia:
    image: authelia/authelia
    container_name: authelia
    hostname: authelia
    volumes:
      - ${CONFIG_DIR}/authelia:/config
    ports:
      - 9092:9092 # web
      - 9959:9959 # metrics
    expose:
      - 9092
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`${AUTHELIA_URL}`)"
      - "traefik.http.routers.authelia.entrypoints=websecure"
      - "traefik.http.routers.authelia.tls.certresolver=tlsresolver"
      - "traefik.http.services.authelia.loadbalancer.server.port=9092"
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9092/api/verify?rd=https://${AUTHELIA_URL}"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardauth.tls.insecureSkipVerify=true"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - openldap
    restart: unless-stopped

  authelia-redis:
    image: redis:alpine
    container_name: authelia-redis
    volumes:
      - ${CONFIG_DIR}/authelia/redis:/data
    expose:
      - 6379
    environment:
      - TZ=${TIMEZONE}
    restart: unless-stopped

  # mqtt client
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - 1883:1883
      - 8883:8883
    volumes:
      - ${CONFIG_DIR}/mosquitto/data:/mosquitto/data
      - ${CONFIG_DIR}/mosquitto/log:/mosquitto/log
      - ${CONFIG_DIR}/mosquitto/config:/mosquitto/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
