version: "3"

volumes:
  prometheus_data: {}
  influxdb_data: {}

services:
  # data scraping
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ${CONFIG_DIR}/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    expose:
      - 9090
    ports:
      - 9090:9090
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  # time series database
  influxdb:
    image: influxdb
    container_name: influxdb
    expose:
      - 8086
      - 8089/udp
    ports:
      - 8086:8086
      - 8089:8089/udp
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: unless-stopped

  # system resource collection
  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  # container resource collection
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    expose:
      - 8080
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  # at-a-glance system resource monitoring
  glances:
    image: nicolargo/glances:latest-full
    container_name: glances
    pid: host
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/glances/glances.conf:/glances/conf/glances.conf
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "GLANCES_OPT=-C /glances/conf/glances.conf --quiet -w --password"
    secrets:
      - source: glances_password
        target: /root/.config/glances/glances.pwd
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  # automated container updating and image monitoring
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    expose:
      - 8080
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATION_PROVIDER}
      # - WATCHTOWER_NOTIFICATION_SKIP_TITLE=True # for ntfy.sh
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_UPDATE_INTERVAL}
      - WATCHTOWER_WARN_ON_HEAD_FAILURE=never
      - WATCHTOWER_HTTP_API_METRICS=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_API_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

secrets:
  glances_password:
    file: ${CONFIG_DIR}/glances/secrets/glances_password
