version: "3"

services:
  # vpn client
  service-vpn:
    container_name: service-vpn
    image: qmcgaw/gluetun:v3.38
    cap_add:
      - NET_ADMIN
    ports:
      - 8743:8000
      # service entrypoints
      - 9696:9696 # prowlarr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8686:8686 # lidarr
      - 8787:8787 # readarr
      - 8788:8788 # readarr-audiobooks
      - 9091:9091 # transmission
      - 51413:51413 # transmission
      - 51413:51413/udp # transmission
      - 6767:6767 # bazarr
      - 8090:8090 # mylar3
      - 8091:8091 # mylar3-manga
      - 5055:5055 # jellyseerr
    networks:
      - public
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - SERVER_COUNTRIES=United States
    restart: unless-stopped

  #indexer management
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/prowlarr:/config
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.prowlarr.rule=Host(`${PROWLARR_URL}`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.prowlarr.middlewares=authelia@docker"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

  # tv show management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_URL}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.sonarr.middlewares=authelia@docker"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # movie management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.radarr.rule=Host(`${RADARR_URL}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.radarr.middlewares=authelia@docker"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # music management
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/lidarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.lidarr.rule=Host(`${LIDARR_URL}`)"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.lidarr.middlewares=authelia@docker"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # book management
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/readarr:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.readarr.rule=Host(`${READARR_URL}`)"
      - "traefik.http.routers.readarr.entrypoints=websecure"
      - "traefik.http.routers.readarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.readarr.middlewares=authelia@docker"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # audiobook management
  readarr-audiobooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-audiobooks
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/readarr-audiobooks:/config
      - ${MEDIA_DIR}:/data
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.readarr-audiobooks.rule=Host(`${READARR_AUDIOBOOKS_URL}`)"
      - "traefik.http.routers.readarr-audiobooks.entrypoints=websecure"
      - "traefik.http.routers.readarr-audiobooks.tls.certresolver=tlsresolver"
      - "traefik.http.routers.readarr-audiobooks.middlewares=authelia@docker"
      - "traefik.http.services.readarr-audiobooks.loadbalancer.server.port=8788"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - prowlarr
      - transmission
    restart: unless-stopped

  # comic management
  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:mylar3
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/mylar3:/config
      - ${MEDIA_DIR}/comics:/comics
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.mylar3.rule=Host(`${MYLAR3_URL}`)"
      - "traefik.http.routers.mylar3.entrypoints=websecure"
      - "traefik.http.routers.mylar3.tls.certresolver=tlsresolver"
      - "traefik.http.routers.mylar3.middlewares=authelia@docker"
      - "traefik.http.services.mylar3.loadbalancer.server.port=8090"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

    # manga management
  mylar3-manga:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3-manga
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:mylar3
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/mylar3-manga:/config
      - ${MEDIA_DIR}/manga:/comics
      - ${DOWNLOADS_DIR}:/downloads
    network_mode: service:service-vpn
    labels:
      - "traefik.http.routers.mylar3-manga.rule=Host(`${MYLAR3_MANGA_URL}`)"
      - "traefik.http.routers.mylar3-manga.entrypoints=websecure"
      - "traefik.http.routers.mylar3-manga.tls.certresolver=tlsresolver"
      - "traefik.http.routers.mylar3-manga.middlewares=authelia@docker"
      - "traefik.http.services.mylar3-manga.loadbalancer.server.port=8091"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
      - transmission
    restart: unless-stopped

  # subtitle management
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${APP_THEME}
    volumes:
      - ${CONFIG_DIR}/bazarr:/config
      - ${MEDIA_DIR}:/data
    network_mode: service:service-vpn
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`${BAZARR_URL}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.bazarr.middlewares=authelia@docker"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
    restart: unless-stopped

  # media request interface
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_DIR}/jellyseerr:/app/config
    network_mode: service:service-vpn
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`${JELLYSEERR_URL}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls.certresolver=tlsresolver"
      - "traefik.http.routers.jellyseerr.middlewares=authelia@docker"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - service-vpn
    restart: unless-stopped

  ## GENERAL CLIENTS

  # download client
  transmission:
    image: lscr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      # - TRANSMISSION_WEB_HOME=/flood-for-transmission/
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ${CONFIG_DIR}/transmission:/config
      - ${DOWNLOADS_DIR}:/downloads
    labels:
      - "traefik.http.routers.transmission.rule=Host(`${TRANSMISSION_URL}`)"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=tlsresolver"
      - "traefik.http.routers.transmission.middlewares=authelia@docker"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: service:service-vpn
    depends_on:
      - service-vpn
    restart: unless-stopped

networks:
  public:
    external:
      name: ${TRAEFIK_PUBLIC_NETWORK}
